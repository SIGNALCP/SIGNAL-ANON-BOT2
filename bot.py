import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from flask import Flask
import threading
import os

# –¢–æ–∫–µ–Ω –∏ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∏–∑ Render Environment)
TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

bot = Bot(token=TOKEN)
dp = Dispatcher()

app = Flask(__name__)

@app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_message(message: types.Message):
    text = (
        "üì° *–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –ø—Ä–æ–µ–∫—Ç–µ SIGNAL!*\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ú–í–î –ø–æ –ß–µ—á–µ–Ω—Å–∫–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–µ –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω "
        "–¥–ª—è –ø—Ä–∏—ë–º–∞ –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö.\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ:\n"
        "‚Äî —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ\n"
        "‚Äî –≥–¥–µ –∏ –∫–æ–≥–¥–∞\n"
        "‚Äî –µ—Å—Ç—å –ª–∏ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞\n\n"
        "–í–∞—à–∞ –ª–∏—á–Ω–æ—Å—Ç—å –æ—Å—Ç–∞—ë—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–Ω–æ–Ω–∏–º–Ω–æ–π."
    )
    await message.answer(text, parse_mode="Markdown")

# –ü—Ä–∏—ë–º –ª—é–±—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def handle_message(message: types.Message):
    user_text = message.text or ""
    caption = f"üì© –ù–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{user_text}"

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ
    if message.photo:
        photo = message.photo[-1]  # –±–µ—Ä—ë–º —Ñ–æ—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
        await bot.send_photo(ADMIN_ID, photo.file_id, caption=caption or "üì© –ù–æ–≤–æ–µ —Ñ–æ—Ç–æ")

    # –ï—Å–ª–∏ –µ—Å—Ç—å –≤–∏–¥–µ–æ
    elif message.video:
        await bot.send_video(ADMIN_ID, message.video.file_id, caption=caption or "üì© –ù–æ–≤–æ–µ –≤–∏–¥–µ–æ")

    # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–∫—Ä–∏–Ω—à–æ—Ç—ã, PDF –∏ —Ç.–ø.)
    elif message.document:
        await bot.send_document(ADMIN_ID, message.document.file_id, caption=caption or "üì© –ù–æ–≤—ã–π —Ñ–∞–π–ª")

    # –ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
    elif message.text:
        await bot.send_message(ADMIN_ID, caption)

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")

# Flask –¥–ª—è Render
def run_flask():
    app.run(host="0.0.0.0", port=8080)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    threading.Thread(target=run_flask).start()
    asyncio.run(main())
