import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import os
from keep_alive import keep_alive  # –∞–Ω—Ç–∏-—Å–æ–Ω —Å–µ—Ä–≤–µ—Ä

# üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω—Ç–∏-—Å–Ω–∞
keep_alive()

# üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID", "0"))

bot = Bot(token=TOKEN)
dp = Dispatcher()

# üéØ –ö–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"
send_button = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="send_message")]
])

# üì∏ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
@dp.message(commands=["start"])
async def start_message(message: types.Message):
    try:
        with open("logo.jpg", "rb") as photo:
            await message.answer_photo(
                photo=photo,
                caption=(
                    "üì¢ **–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –ø—Ä–æ–µ–∫—Ç–µ SIGNAL**\n"
                    "–ê–Ω–æ–Ω–∏–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö.\n"
                    "–í–∞—à–µ –∏–º—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è ‚Äî –≤—Å—ë –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ.\n\n"
                    "üìù **–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ:**\n"
                    "1Ô∏è‚É£ –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ ‚Äî –æ–ø–∏—à–∏—Ç–µ —Å–æ–±—ã—Ç–∏–µ.\n"
                    "2Ô∏è‚É£ –ì–¥–µ ‚Äî –∞–¥—Ä–µ—Å, –æ—Ä–∏–µ–Ω—Ç–∏—Ä –∏–ª–∏ –Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç.\n"
                    "3Ô∏è‚É£ –ö–æ–≥–¥–∞ ‚Äî –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è.\n"
                    "4Ô∏è‚É£ –ö—Ç–æ –ø—Ä–∏—á–∞—Å—Ç–µ–Ω ‚Äî –ª—é–¥–∏, –∞–≤—Ç–æ, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.\n"
                    "5Ô∏è‚É£ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é).\n\n"
                    "‚öñÔ∏è –í—Å–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ—Å—Ç—É–ø–∞—é—Ç –Ω–∞–ø—Ä—è–º—É—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º **–ú–í–î –ø–æ –ß–µ—á–µ–Ω—Å–∫–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–µ.**"
                ),
                reply_markup=send_button,
                parse_mode="Markdown"
            )
    except Exception:
        await message.answer(
            "üì¢ **–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –ø—Ä–æ–µ–∫—Ç–µ SIGNAL**\n"
            "–ê–Ω–æ–Ω–∏–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö.\n"
            "–í–∞—à–µ –∏–º—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è ‚Äî –≤—Å—ë –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ.",
            reply_markup=send_button,
            parse_mode="Markdown"
        )

# üì® –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É
@dp.callback_query(lambda c: c.data == "send_message")
async def prompt_user(callback_query: types.CallbackQuery):
    await callback_query.message.answer(
        "‚úçÔ∏è –û–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∏–∂–µ. –ú–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ –≥–æ–ª–æ—Å."
    )

# üí¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def handle_message(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
    if message.text:
        await bot.send_message(ADMIN_ID, f"üïµÔ∏è‚Äç‚ôÇÔ∏è –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{message.text}")
    elif message.photo:
        await bot.send_photo(ADMIN_ID, message.photo[-1].file_id, caption="üì∑ –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Ñ–æ—Ç–æ")
    elif message.video:
        await bot.send_video(ADMIN_ID, message.video.file_id, caption="üé• –ê–Ω–æ–Ω–∏–º–Ω–æ–µ –≤–∏–¥–µ–æ")
    elif message.voice:
        await bot.send_voice(ADMIN_ID, message.voice.file_id, caption="üéô –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    else:
        await bot.send_message(ADMIN_ID, "üì¶ –ü–æ–ª—É—á–µ–Ω–æ –≤–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞")

    # –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.answer(
        "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ.\n"
        "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –≤–∞—à—É –±–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫—É—é –ø–æ–∑–∏—Ü–∏—é. "
        "–í—Å–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º **–ú–í–î –ø–æ –ß–µ—á–µ–Ω—Å–∫–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–µ** –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.",
        parse_mode="Markdown"
    )

# üöÄ –ó–∞–ø—É—Å–∫
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
